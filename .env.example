# NODE
# --------------------------------------------------------------------------------------------------
NODE_ENV # Defines the Node environment. It must be one of the following: "development", "production" or "test"

# SERVER
# --------------------------------------------------------------------------------------------------
SERVER_PORT # The port number our application server will listen to
SERVER_PREFIX # The prefix for all request routes in our HTTP server
SERVER_NETWORK_ADDRESS # The network address that our server will use. This is used to fix a Docker well-known bug where we must define the network address as 0.0.0.0 for it to work inside a container
SERVER_HTTPS_ENABLED # A feature flag enabling HTTPS in our server
SERVER_HTTPS_KEY_FILE_PATH # The path to the HTTPS public key file
SERVER_HTTPS_CERT_FILE_PATH # The path to the HTTP cert file
SERVER_CORS_CREDENTIALS_FLAG # A feature flag enabling credentials in our server CORS
SERVER_CORS_ALLOWED_ORIGINS # A comma-separated list of alloed origins to enable CORS in our server

# LOGGING
# --------------------------------------------------------------------------------------------------
LOGGING_LEVEL # The level of logging you want to use. It can be 'DEBUG', 'INFO', 'WARNING' or 'ERROR'
LOGGING_SERVICE_NAME # The service name you want to use in our logger. You must follow this pattern: "<application-name>@<stage>"

# GRAPHQL
# --------------------------------------------------------------------------------------------------
GRAPHQL_DEBUG_ENABLED # A feature flag that enables debugging in our GraphQL application
GRAPHQL_PLAYGROUND_ENABLED # A feature flag that enables the GraphQL Apollo Playground in our GraphQL application
GRAPHQL_INSTROSPECTION_ENABLED # A feature flag that enables the instrospection in our GraphQL Apollo Playground. This is required if you're trying to run the playground in a server with NODE_ENV set to "production"
GRAPHQL_SCHEMA_FILE_PATH # The file path where you want to generate the GraphQL schema file

# TYPEORM
# --------------------------------------------------------------------------------------------------
TYPEORM_TYPE # The type of your database
TYPEORM_ENDPOINT_HOST # The host of our database
TYPEORM_ENDPOINT_PORT # The port that we should connect to our host
TYPEORM_ENDPOINT_DATABASE # Our database name
TYPEORM_AUTHENTICATION_USER # The user to log in our database
TYPEORM_AUTHENTICATION_PASSWORD # The password used for authentication
TYPEORM_PATTERN_DIRECTORY_ENTITY # A comma separated string of paths to your desired entities directories
TYPEORM_PATTERN_DIRECTORY_MIGRATION # A comma separated string of relative paths to your desired migrations directories
TYPEORM_PATTERN_FILE_ENTITY # The desired entity files name pattern
TYPEORM_PATTERN_FILE_MIGRATION # The desired migration files name pattern
TYPEORM_LOGGING_ENABLED # A feature flag that enables logging all queries
